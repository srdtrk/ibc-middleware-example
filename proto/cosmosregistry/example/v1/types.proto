syntax = "proto3";
package cosmosregistry.example.v1;

option go_package = "github.com/cosmosregistry/example";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

// Params defines the parameters of the module.
message Params { option (amino.name) = "cosmosregistry/example/Params"; }

// Metadata defines the middleware specific metadata encoded into the channel
// version bytestring See ICS004:
// https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
// If the middleware is a stateless middleware, you need not include any
// metadata, and can omit this message.
message Metadata {
  // middleware_version defines the middleware version
  string middleware_version = 1;
  // app_version defines the underlying application version, which may or may
  // not be a JSON encoded bytestring
  string app_version = 2;
}

// Counter defines a counter object.
// It is used only for genesis purposes. Collections does not need to use it.
message CallbackCounter {
  option (amino.name) = "cosmosregistry/example/CallbackCounter";

  // on_chan_open counts the number of times OnChanOpenAck or OnChanOpenConfirm
  // is called in the underlying channel.
  uint64 on_chan_open = 1;

  // on_recv_packet counts the number of times OnRecvPacket is called in the
  // underlying channel.
  uint64 on_recv_packet = 2;

  // on_acknowledgement counts the number of times OnAcknowledgement is called
  // in the underlying channel.
  uint64 on_acknowledgement = 3;

  // on_timeout counts the number of times OnTimeoutPacket is called in the
  // underlying channel.
  uint64 on_timeout = 4;

  // send_packet counts the number of times SendPacket is called in the
  // underlying channel.
  uint64 send_packet = 5;

  // channel_id defines the channel that is associated with the callback counts.
  string channel_id = 6;
}

// Counter defines a counter object.
// It is used only for genesis purposes. Collections does not need to use it.
message Counter {
  option (amino.name) = "cosmosregistry/example/Counter";

  // count defines the count of the counter.
  uint64 count = 1;

  // address defines the address that is associated with the count.
  string address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  ;
}

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // counter defines the counter object.
  repeated Counter counters = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // params defines all the parameters of the module.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}
